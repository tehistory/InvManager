// <auto-generated />
using InvManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvManager.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InvManager.Models.AccountModel", b =>
                {
                    b.Property<int>("accountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("accountID"), 1L, 1);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("accountID");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            accountID = 2,
                            email = "",
                            password = "password",
                            userName = "test"
                        },
                        new
                        {
                            accountID = 1,
                            email = "ftegelhoff@gmail.com",
                            password = "adminpassword1",
                            userName = "admin"
                        });
                });

            modelBuilder.Entity("InvManager.Models.ContainerModel", b =>
                {
                    b.Property<int>("containerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("containerID"), 1L, 1);

                    b.Property<int>("accountID")
                        .HasColumnType("int");

                    b.Property<string>("containerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("containerID");

                    b.ToTable("Containers");

                    b.HasData(
                        new
                        {
                            containerID = 1,
                            accountID = 1,
                            containerName = "TestCName"
                        });
                });

            modelBuilder.Entity("InvManager.Models.ItemModel", b =>
                {
                    b.Property<int>("itemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("itemID"), 1L, 1);

                    b.Property<int>("containerID")
                        .HasColumnType("int");

                    b.Property<string>("itemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("itemID");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            itemID = 1,
                            containerID = 1,
                            itemName = "test Item"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
